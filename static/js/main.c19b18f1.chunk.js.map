{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyboard","handlerKeyup","event","setState","key","document","addEventListener","this","removeEventListener","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,SAAU,IAFd,EAaEC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,SAAUE,EAAME,OAdpC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,gBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,gBAV/C,oBAiBE,WACE,IAAQD,EAAaO,KAAKR,MAAlBC,SAER,OACE,qBAAKS,UAAU,MAAf,SACGF,KAAKR,MAAMC,SAER,oBAAGS,UAAU,eAAb,sCAEGT,EAFH,OAMA,mBAAGS,UAAU,eAAb,2CA9BZ,GAAyBC,IAAMC,e,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.c19b18f1.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  keyboard: string\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: State = {\n    keyboard: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handlerKeyup);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handlerKeyup);\n  }\n\n  handlerKeyup = (event: KeyboardEvent) => {\n    this.setState({ keyboard: event.key });\n  };\n\n  render() {\n    const { keyboard } = this.state;\n\n    return (\n      <div className=\"App\">\n        {this.state.keyboard\n          ? (\n            <p className=\"App__message\">\n              The last pressed key is [\n              {keyboard}\n              ]\n            </p>\n          )\n          : <p className=\"App__message\">Nothing was pressed yet</p>}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}